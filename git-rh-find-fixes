#!/bin/sh -efu

cwd="$(readlink -ev "$0")"
cwd="${cwd%/*}"

. "$cwd/git-rh-sh-functions"

show_help()
{
	cat <<-EOF
	Usage: $PROG [options] commit

	Options:
	  -v, --verbose    Print a message for each action;
	  -V, --version    Print program version and exit;
	  -h, --help       Show this text and exit.

	Report bugs to author.

	EOF
	exit
}

TEMP=`getopt -n "$PROG" -o h,v,V -l verbose,version,help,usage -- "$@"` ||
	show_usage
eval "set -- $TEMP"

mode=
while :; do
	case "${1-}" in
		-v|--verbose)
			verbose=-v
			;;
		-V|--version)
			print_version
			;;
		-h|--help|--usage)
			show_help
			;;
		--) shift
			break
			;;
	esac
	shift
done

git_show_filter()
{
	[ -n "$is_tty" ] || exec cat
	exec sed -r \
		-e "s|^([0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2} [-+][0-9]{4})[[:space:]]([^[:space:]]+) |${COLOR_BRIGHT_BLACK}\1${COLOR_NORMAL} ${COLOR_BRIGHT_YELLOW}\2${COLOR_NORMAL} |" \
	#
}

show_fixes()
{
	local commit since abbrev

	commit="$1"; shift
	since="$(git log -1 --format='%ct' "$commit")"
	abbrev="$(git log -1 --format='%h' "$commit")"

	git log \
		--format='%H' \
		--date='unix' \
		--since="$since" \
		--grep '^[[:space:]]*Fixes:[[:space:]]*'"$commit"'[[:space:]]*' \
		--grep '^[[:space:]]*Fixes:[[:space:]]*'"$abbrev"'[[:space:]]*' \
	#
}

commits=
while [ "$#" != 0 ]; do
	commit="$1"
	shift

	commits="$commits $commit"
	fixes="$(show_fixes "$commit")"

	[ -n "$fixes" ] ||
		continue

	commits="$commits $fixes"

	for x in $fixes; do
		set -- "$@" "$x"
	done
done

[ -z "$commits" ] ||
	git show --no-patch --date-order --format='%ct%x09%ci%x09%H %s' $commits |
		sort -k1,1 |
		cut -f2- |
		git_show_filter
